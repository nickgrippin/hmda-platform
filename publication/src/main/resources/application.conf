akka {
  actor {
    deployment {
      /publication {
        dispatcher = publication-dispatcher
      }
    }
  }
  quartz {
    defaultTimezone = "EST"
    threadPool.threadCount = 2
    schedules {
      TSRegulator {
        description = "Publish TS regulator data on a schedule"
        //expression = "*/30 * * ? * *"
        expression = "00 00 22 ? * *"
      }
      LARRegulator {
        description = "Publish LAR regulator data on a schedule"
        //expression = "*/30 * * ? * *"
        expression = "00 00 22 ? * *"
      }
      PanelRegulator {
        description = "Publish LAR regulator data on a schedule"
        //expression = "*/30 * * ? * *"
        expression = "00 00 22 ? * *"
      }
    }
  }
}

hmda {
  actor {
    timeout = 5
  }
  publication {
    fetchsize = 100
    aws {
      access-key-id = ""
      access-key-id = ${?AWS_ACCESS_KEY_ID}
      secret-access-key = ""
      secret-access-key = ${?AWS_SECRET_ACCESS_KEY}
      environment = "dev" //change to "prod" for production S3 bucket
      environment = ${?AWS_ENVIRONMENT}
      public-bucket = "cfpb-hmda-public"
      public-bucket = ${?S3_PUBLIC_BUCKET}
      private-bucket = "cfpb-hmda-export"
      private-bucket = ${?S3_PRIVATE_BUCKET}
      region = "us-east-1"
      region = ${?AWS_REGION}
    }
    year = 2017
    year = ${?PUBLICATION_YEAR}
  }

}

publication-dispatcher {
  type = Dispatcher
  executor = "fork-join-executor"
  fork-join-executor {
    # Min number of threads to cap factor-based parallelism number to
    parallelism-min = 2
    # Parallelism (threads) ... ceil(available processors * factor)
    parallelism-factor = 2.0
    # Max number of threads to cap factor-based parallelism number to
    parallelism-max = 10
  }
  # Throughput defines the maximum number of messages to be
  # processed per actor before the thread jumps to the next actor.
  # Set to 1 for as fair as possible.
  throughput = 100
}

database {
  dataSourceClass = org.postgresql.ds.PGSimpleDataSource
  properties = {
    url = "jdbc:postgresql://localhost/lar"
    #user = “grippinn”
  }
  numThreads = 10
}

#database {
#  driver = "slick.driver.PostgresDriver$"

#  db {
#    url = "jdbc:postgresql://localhost/postgres?user=postgres"
#    driver = org.postgresql.Driver
#    maxThreads = 5
#  }
#}
